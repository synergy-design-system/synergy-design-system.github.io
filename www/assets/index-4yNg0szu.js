const v={alert:{description:{value:"Alerts are used to display important messages inline or as toast notifications.",type:"text"},title:{value:"Alert",type:"text"}},"animated-image":{description:{value:"A component for displaying animated GIFs and WEBPs that play and pause on interaction.",type:"text"},title:{value:"Animated Image",type:"text"}},animation:{description:{value:"Animate elements declaratively with nearly 100 baked-in presets, or roll your own with custom keyframes.",type:"text"},title:{value:"Animation",type:"text"}},avatar:{description:{value:"Avatars are used to represent a person or object.",type:"text"},title:{value:"Avatar",type:"text"}},badge:{description:{value:"Badges are used to draw attention and display statuses or counts.",type:"text"},title:{value:"Badge",type:"text"}},"breadcrumb-item":{description:{value:"Breadcrumb Items are used inside breadcrumbs to represent different links.",type:"text"},title:{value:"Breadcrumb Item",type:"text"}},breadcrumb:{description:{value:"Breadcrumbs provide a group of links so users can easily navigate a website's hierarchy.",type:"text"},title:{value:"Breadcrumb",type:"text"}},button:{default:{description:{value:"Buttons represent actions that are available to the user.",type:"text"},title:{value:"Button",type:"text"}},variant:{title:{value:"Variants",type:"text"},description:{value:"Use the variant attribute to set the button’s variant. Variants can be Filled, Outline and Text Buttons. Use the outline attribute to draw outlined buttons with transparent backgrounds. Use the text variant to create text buttons that share the same size as regular buttons but don’t have backgrounds or borders.",type:"text"}},size:{title:{value:"Sizes",type:"text"},description:{value:"Use the size attribute to change a button’s size.",type:"text"}},link:{title:{value:"Link Buttons",type:"text"},description:{value:"It’s often helpful to have a button that works like a link. This is possible by setting the href attribute, which will make the component render an <a> under the hood. This gives you all the default link behavior the browser provides (e.g. CMD/CTRL/SHIFT + CLICK) and exposes the target and download attributes.",type:"text"}},width:{title:{value:"Setting a Custom Width",type:"text"},description:{value:"As expected, buttons can be given a custom width by setting the width attribute. This is useful for making buttons span the full width of their container on smaller screens.",type:"text"}},"prefix-suffix":{title:{value:"Prefix and Suffix Icons.",type:"text"},description:{value:"Use the prefix and suffix slots to add icons.",type:"text"}},caret:{title:{value:"Caret",type:"text"},description:{value:"Use the caret attribute to add a dropdown indicator when a button will trigger a dropdown, menu, or popover.",type:"text"}},loading:{title:{value:"Loading",type:"text"},description:{value:"Use the loading attribute to make a button busy. The width will remain the same as before, preventing adjacent elements from moving around. Clicks will be suppressed until the loading state is removed.",type:"text"}},disabled:{title:{value:"Disabled",type:"text"},description:{value:"Use the disabled attribute to disable a button.",type:"text"}},focus:{title:{value:"Focus",type:"text"},description:{value:"The focus event gives the user feedback that the Button has been focused by the keyboard interaction and that the button component is ready for use.",type:"text"}}},"button-group":{description:{value:"Button groups can be used to group related buttons into sections.",type:"text"},title:{value:"Button Group",type:"text"}},card:{description:{value:"Cards can be used to group related subjects in a container.",type:"text"},title:{value:"Card",type:"text"}},"carousel-item":{description:{value:"A carousel item represent a slide within a carousel.",type:"text"},title:{value:"Carousel Item",type:"text"}},carousel:{description:{value:"Carousels display an arbitrary number of content slides along a horizontal or vertical axis.",type:"text"},title:{value:"Carousel",type:"text"}},checkbox:{default:{description:{value:"Checkboxes allow the user to toggle an option on or off.",type:"text"},title:{value:"Checkbox",type:"text"}},checked:{title:{value:"Checked",type:"text"},description:{value:"Use the checked attribute to activate the checkbox.",type:"text"}},indeterminate:{title:{value:"Indeterminate",type:"text"},description:{value:"Use the indeterminate attribute to make the checkbox indeterminate.",type:"text"}},focus:{title:{value:"Focus",type:"text"},description:{value:"The focus event gives the user feedback that the Checkbox has been focused by the keyboard interaction.",type:"text"}},disabled:{title:{value:"Disabled",type:"text"},description:{value:"Use the disabled attribute to disable the checkbox.",type:"text"}},sizes:{title:{value:"Sizes",type:"text"},description:{value:"Use the size attribute to change a checkbox’s size.",type:"text"}},invalid:{title:{value:"Invalid",type:"text"},description:{value:"The invalid status is used to warn the user that the Checkbox is invalid. For example, if the check is mandatory and nothing has been checked.",type:"text"}},validity:{title:{value:"Custom Validity",type:"text"},description:{value:"Use the setCustomValidity() method to set a custom validation message. This will prevent the form from submitting and make the browser display the error message you provide. To clear the error, call this function with an empty string.",type:"text"}}},"color-picker":{description:{value:"Color pickers allow the user to select a color.",type:"text"},title:{value:"Color Picker",type:"text"}},"copy-button":{description:{value:"Copies data to the clipboard when the user clicks the button.",type:"text"},title:{value:"Copy Button",type:"text"}},details:{description:{value:"Details show a brief summary and expand to show additional content.",type:"text"},title:{value:"Details",type:"text"}},dialog:{description:{value:`Dialogs, sometimes called "modals", appear above the page and require the user's immediate attention.`,type:"text"},title:{value:"Dialog",type:"text"}},divider:{default:{description:{value:"Dividers are used to visually separate or group elements.",type:"text"},title:{value:"Divider",type:"text"}},width:{title:{value:"Width",type:"text"},description:{value:"Use the --width custom property to change the width of the divider.",type:"text"}},color:{title:{value:"Color",type:"text"},description:{value:"Use the --color custom property to change the color of the divider.",type:"text"}},spacing:{title:{value:"Spacing",type:"text"},description:{value:"Use the --spacing custom property to change the amount of space between the divider and it’s neighboring elements.",type:"text"}},vertical:{title:{value:"Vertical",type:"text"},description:{value:"Add the vertical attribute to draw the divider in a vertical orientation. The divider will span the full height of its container. Vertical dividers work especially well inside of a flex container.",type:"text"}}},drawer:{default:{description:{value:"Drawers slide in from a container to expose additional options and information.",type:"text"},title:{value:"Drawer",type:"text"}},start:{title:{value:"Slide in From Start",type:"text"},description:{value:"By default, drawers slide in from the end. To make the drawer slide in from the start, set the placement attribute to start.",type:"text"}},top:{title:{value:"Slide in From Top",type:"text"},description:{value:"To make the drawer slide in from the top, set the placement attribute to top.",type:"text"}},bottom:{title:{value:"Slide in From Bottom",type:"text"},description:{value:"To make the drawer slide in from the bottom, set the placement attribute to bottom.",type:"text"}},contained:{title:{value:"Contained to an Element",type:"text"},description:{value:`By default, drawers slide out of their containing block, which is usually the viewport. To make a drawer slide out of a parent element, add the contained attribute to the drawer and apply position: relative to its parent.

Unlike normal drawers, contained drawers are not modal. This means they do not show an overlay, they do not trap focus, and they are not dismissible with Escape. This is intentional to allow users to interact with elements outside of the drawer.`,type:"text"}},size:{title:{value:"Custom Size",type:"text"},description:{value:"Use the --size custom property to set the drawer’s size. This will be applied to the drawer’s width or height depending on its placement.",type:"text"}},scrolling:{title:{value:"Scrolling",type:"text"},description:{value:"By design, a drawer’s height will never exceed 100% of its container. As such, drawers will not scroll with the page to ensure the header and footer are always accessible to the user.",type:"text"}},action:{title:{value:"Header Actions",type:"text"},description:{value:"The header shows a functional close button by default. You can use the header-actions slot to add additional icon buttons if needed.",type:"text"}},closing:{title:{value:"Preventing the Drawer from Closing",type:"text"},description:{value:`By default, drawers will close when the user clicks the close button, clicks the overlay, or presses the Escape key. In most cases, the default behavior is the best behavior in terms of UX. However, there are situations where this may be undesirable, such as when data loss will occur.

To keep the drawer open in such cases, you can cancel the sl-request-close event. When canceled, the drawer will remain open and pulse briefly to draw the user’s attention to it.

You can use event.detail.source to determine what triggered the request to close. This example prevents the drawer from closing when the overlay is clicked, but allows the close button or Escape to dismiss it.`,type:"text"}},fokus:{title:{value:"Customizing Initial Focus",type:"text"},description:{value:"By default, the drawer’s panel will gain focus when opened. This allows a subsequent tab press to focus on the first tabbable element in the drawer. If you want a different element to have focus, add the autofocus attribute to it as shown below.",type:"text"}}},dropdown:{description:{value:'Dropdowns expose additional content that "drops down" in a panel.',type:"text"},title:{value:"Dropdown",type:"text"}},"format-bytes":{description:{value:"Formats a number as a human readable bytes value.",type:"text"},title:{value:"Format Bytes",type:"text"}},"format-date":{description:{value:"Formats a date/time using the specified locale and options.",type:"text"},title:{value:"Format Date",type:"text"}},"format-number":{description:{value:"Formats a number using the specified locale and options.",type:"text"},title:{value:"Format Number",type:"text"}},"icon-button":{default:{description:{value:`Icons buttons are simple, icon-only buttons that can be used for actions and in toolbars.

For a full list of icons that come bundled with Synergy, refer to the Assets.`,type:"text"},title:{value:"Icon Button",type:"text"}},sizes:{title:{value:"Sizes",type:"text"},description:{value:"Use the size attribute to change a icon-button size.",type:"text"}},disabled:{title:{value:"Disabled",type:"text"},description:{value:"Use the disabled attribute to disable the icon button.",type:"text"}},focus:{title:{value:"Focus",type:"text"},description:{value:"The focus event gives the user feedback that the icon-button has been focused by the keyboard interaction.",type:"text"}},color:{title:{value:"Color",type:"text"},description:{value:"The Icon button can have two color variants, Primary or Neutral Color.",type:"text"}},label:{titel:{value:"Accessibility Label",type:"text"},description:{value:"A description that gets read by assistive devices. For optimal accessibility, you have to include a label that describes what the icon button does.",type:"text"}},link:{title:{value:"Link Buttons",type:"text"},description:{value:"It’s often helpful to have a button that works like a link. This is possible by setting the href attribute, which will make the component render an <a> under the hood. This gives you all the default link behavior the browser provides (e.g. CMD/CTRL/SHIFT + CLICK) and exposes the target and download attributes.",type:"text"}}},icon:{description:{value:"Icons are symbols that can be used to represent various options within an application.",type:"text"},title:{value:"Icon",type:"text"}},"image-comparer":{description:{value:"Compare visual differences between similar photos with a sliding panel.",type:"text"},title:{value:"Image Comparer",type:"text"}},include:{description:{value:"Includes give you the power to embed external HTML files into the page.",type:"text"},title:{value:"Include",type:"text"}},input:{default:{description:{value:"Inputs collect data from the user.",type:"text"},title:{value:"Input",type:"text"}},label:{title:{value:"Labels",type:"text"},description:{value:"Use the label attribute to give the input an accessible label. For labels that contain HTML, use the label slot instead.",type:"text"}},"help-text":{title:{value:"help-text",type:"text"},description:{value:"Add descriptive help text to an input with the help-text attribute. For help texts that contain HTML, use the help-text slot instead.",type:"text"}},placeholder:{title:{value:"Placeholder",type:"text"},description:{value:"Use the placeholder attribute to add a placeholder.",type:"text"}},clearable:{title:{value:"Clearable",type:"text"},description:{value:"Add the clearable attribute to add a clear button when the input has content.",type:"text"}},"password-toggle":{title:{value:"Toggle Password",type:"text"},description:{value:"Add the password-toggle attribute to add a toggle button that will show the password when activated.",type:"text"}},readonly:{title:{value:"Read-only Inputs",type:"text"},description:{value:"Add the read-only attribute to draw a read-only input.",type:"text"}},disabled:{title:{value:"Disabled",type:"text"},description:{value:"Use the disabled attribute to disable an input.",type:"text"}},size:{title:{value:"Sizes",type:"text"},description:{value:"Use the size attribute to change an input's size.",type:"text"}},"prefix-suffix":{title:{value:"Prefix Suffix Text and Icons",type:"text"},description:{value:"Use the prefix and suffix slots to add text and icons.",type:"text"}},focus:{title:{value:"Focus / Active",type:"text"},description:{value:"The focus attribute provides feedback to the users, informing them that the input component is ready for use.",type:"text"}},invalid:{title:{value:"Invalid",type:"text"},description:{value:"The invalid status is used to warn the user that the input is invalid. For example, if the entry of text is mandatory and nothing has been entered or if a text has been entered that does not have the correct format.",type:"text"}},stepper:{title:{value:"Stepper",type:"text"},description:{value:"The Stepper (Input type number) attribute has additional step buttons at the right side for incrementing and decrementing values. It is ideal for situations where users need to adjust quantities or settings within a range.",type:"text"}},types:{title:{value:"Input Types",type:"text"},description:{value:"The type attribute controls the type of input the browser renders.",type:"text"}},"label-position":{title:{value:"Customizing Label Position",type:"text"},description:{value:"Use to customize the way form controls are drawn. This example uses CSS grid to position the label to the left of the control, but the possible orientations are nearly endless. The same technique works for inputs, textareas, radio groups, and similar form controls.",type:"text"}}},"menu-item":{description:{value:"Menu items provide options for the user to pick from in a menu.",type:"text"},title:{value:"Menu Item",type:"text"}},"menu-label":{description:{value:"Menu labels are used to describe a group of menu items.",type:"text"},title:{value:"Menu Label",type:"text"}},menu:{description:{value:"Menus provide a list of options for the user to choose from.",type:"text"},title:{value:"Menu",type:"text"}},"mutation-observer":{description:{value:"The Mutation Observer component offers a thin, declarative interface to the MutationObserver API.",type:"text"},title:{value:"Mutation Observer",type:"text"}},option:{default:{description:{value:"Options define the selectable items within various form controls such as select.",type:"text"},title:{value:"Option",type:"text"}},disabled:{title:{value:"Disabled",type:"text"},description:{value:"Use the disabled attribute to disable an option and prevent it from being selected.",type:"text"}},"prefix-suffix":{title:{value:"Prefix and Suffix",type:"text"},description:{value:"Add icons to the start and end of menu items using the prefix and suffix slots.",type:"text"}}},popup:{description:{value:'Popup is a utility that lets you declaratively anchor "popup" containers to another element.',type:"text"},title:{value:"Popup",type:"text"}},"progress-bar":{description:{value:"Progress bars are used to show the status of an ongoing operation.",type:"text"},title:{value:"Progress Bar",type:"text"}},"progress-ring":{description:{value:"Progress rings are used to show the progress of a determinate operation in a circular fashion.",type:"text"},title:{value:"Progress Ring",type:"text"}},"qr-code":{description:{value:"Generates a QR code and renders it using the Canvas API.",type:"text"},title:{value:"QR Code",type:"text"}},"radio-button":{description:{value:"Radios buttons allow the user to select a single option from a group using a button-like control.",type:"text"},title:{value:"Radio Button",type:"text"}},"radio-group":{default:{description:{value:"Radio groups are used to group multiple radios or radio buttons so they function as a single form control.",type:"text"},title:{value:"Radio Group",type:"text"}},labels:{title:{value:"Labels",type:"text"},description:{value:"Use the label attribute to give the radio-group an accessible label. For labels that contain HTML, use the label slot instead.",type:"text"}},"help-text":{title:{value:"Help Text",type:"text"},description:{value:"Add descriptive help text to a radio group with the help-text attribute. For help texts that contain HTML, use the help-text slot instead.",type:"text"}},disabled:{title:{value:"Disabling Options",type:"text"},description:{value:"Radios and radio buttons can be disabled by adding the disabled attribute to the respective options inside the radio group.",type:"text"}},size:{title:{value:"Sizing Options",type:"text"},description:{value:"The size of Radios and Radio Buttons will be determined by the Radio Group’s size attribute.",type:"text"}},required:{title:{value:"Validation",type:"text"},description:{value:"Setting the required attribute to make selecting an option mandatory. If a value has not been selected, it will prevent the form from submitting and display an error message.",type:"text"}},setCustomValidity:{title:{value:"Custom Validity",type:"text"},description:{value:"Use the setCustomValidity() method to set a custom validation message. This will prevent the form from submitting and make the browser display the error message you provide. To clear the error, call this function with an empty string.",type:"text"}},focus:{title:{value:"Focus",type:"text"},description:{value:"The focus event gives the user feedback that one of the Checkboxes has been focused by the keyboard interaction.",type:"text"}},invalid:{title:{value:"Invalid",type:"text"},description:{value:"The invalid status is used to warn the user that the Radio Group is invalid. For example, if the radio is mandatory and nothing has been checked.",type:"text"}}},range:{description:{value:"Ranges allow the user to select a single value within a given range using a slider.",type:"text"},title:{value:"Range",type:"text"}},rating:{description:{value:"Ratings give users a way to quickly view and provide feedback.",type:"text"},title:{value:"Rating",type:"text"}},"relative-time":{description:{value:"Outputs a localized time phrase relative to the current date and time.",type:"text"},title:{value:"Relative Time",type:"text"}},"resize-observer":{description:{value:"The Resize Observer component offers a thin, declarative interface to the ResizeObserver API.",type:"text"},title:{value:"Resize Observer",type:"text"}},select:{default:{description:{value:"Selects allow you to choose items from a menu of predefined options.",type:"text"},title:{value:"Select",type:"text"}},labels:{title:{value:"Labels",type:"text"},description:{value:"Use the label attribute to give the select an accessible label. For labels that contain HTML, use the label slot instead.",type:"text"}},"help-text":{title:{value:"Help Text",type:"text"},description:{value:"Add descriptive help text to a select with the help-text attribute. For help texts that contain HTML, use the help-text slot instead.",type:"text"}},clearable:{title:{value:"Clearable",type:"text"},description:{value:"Use the clearable attribute to make the control clearable. The clear button only appears when an option is selected.",type:"text"}},disabled:{title:{value:"Disabled",type:"text"},description:{value:"Use the disabled attribute to disable a select.",type:"text"}},multiple:{title:{value:"Multiple",type:"text"},description:{value:"To allow multiple options to be selected, use the multiple attribute. It’s a good practice to use clearable when this option is enabled. To set multiple values at once, set value to a space-delimited list of values.",type:"text"}},initialvalue:{title:{value:"Setting Initial Values",type:"text"},description:{value:`Use the value attribute to set the initial selection.

When using multiple, the value attribute uses space-delimited values to select more than one option. Because of this, <syn-option> values cannot contain spaces. If you’re accessing the value property through Javascript, it will be an array.`,type:"text"}},group:{title:{value:"Grouping Options",type:"text"},description:{value:"Use <syn-optgroup> to group listbox items visually.",type:"text"}},size:{title:{value:"Sizes",type:"text"},description:{value:"Use the size attribute to change a select’s size. Note that size does not apply to listbox options.",type:"text"}},prefix:{title:{value:"Prefix Icons",type:"text"},description:{value:"Use the prefix slot to prepend an icon to the control.",type:"text"}},gettag:{title:{value:"Custom Tags",type:"text"},description:{value:`When multiple options can be selected, you can provide custom tags by passing a function to the getTag property. Your function can return a string of HTML, a Lit Template, or an HTMLElement. The getTag() function will be called for each option. The first argument is an <syn-option> element and the second argument is the tag’s index (its position in the tag list).

Remember that custom tags are rendered in a shadow root. To style them, you can use the style attribute in your template or you can add your own parts and target them with the ::part() selector.`,type:"text"}},placeholder:{title:{value:"Placeholder",type:"text"},description:{value:"Use the placeholder attribute to add a placeholder.",type:"text"}},focus:{title:{value:"Focus / Active",type:"text"},description:{value:"The focus event gives the user feedback that the Select has been focused by the keyboard interaction or active click from the user..",type:"text"}}},skeleton:{description:{value:"Skeletons are used to provide a visual representation of where content will eventually be drawn.",type:"text"},title:{value:"Skeleton",type:"text"}},spinner:{description:{value:"Spinners are used to show the progress of an indeterminate operation.",type:"text"},title:{value:"Spinner",type:"text"}},"split-panel":{description:{value:"Split panels display two adjacent panels, allowing the user to reposition them.",type:"text"},title:{value:"Split Panel",type:"text"}},switch:{default:{description:{value:"Switches allow the user to toggle an option on or off.",type:"text"},title:{value:"Switch",type:"text"}},checked:{description:{value:"Use the checked attribute to activate the switch.",type:"text"},title:{value:"Checked",type:"text"}},disabled:{title:{value:"Disabled",type:"text"},description:{value:"Use the disabled attribute to disable the switch.",type:"text"}},sizes:{title:{value:"Sizes",type:"text"},description:{value:"Use the size attribute to change a switch’s size.",type:"text"}},focus:{title:{value:"Focus",type:"text"},description:{value:"The focus event gives the user feedback that the Switch has been focused by the keyboard interaction.",type:"text"}},invalid:{title:{value:"Invalid",type:"text"},description:{value:"The invalid status is used to warn the user that the Switch is invalid.",type:"text"}}},"tab-group":{description:{value:"Tab groups organize content into a container that shows one section at a time.",type:"text"},title:{value:"Tab Group",type:"text"}},"tab-panel":{description:{value:"Tab panels are used inside tab groups to display tabbed content.",type:"text"},title:{value:"Tab Panel",type:"text"}},tab:{description:{value:"Tabs are used inside tab groups to represent and activate tab panels.",type:"text"},title:{value:"Tab",type:"text"}},tag:{default:{description:{value:"Tags are used as labels to organize things or to indicate a selection.",type:"text"},title:{value:"Tag",type:"text"}},size:{title:{value:"Sizes",type:"text"},description:{value:"Use the size attribute to change a tab’s size.",type:"text"}},removable:{title:{value:"Removable",type:"text"},description:{value:"Use the removable attribute to add a remove button to the tag.",type:"text"}}},textarea:{default:{title:{value:"Textarea",type:"text"},description:{value:"Textareas collect data from the user and allow multiple lines of text.",type:"text"}},labels:{title:{value:"Labels",type:"text"},description:{value:"Use the label attribute to give the textarea an accessible label. For labels that contain HTML, use the label slot instead.",type:"text"}},"help-text":{title:{value:"Help Text",type:"text"},description:{value:"Add descriptive help text to a textarea with the help-text attribute. For help texts that contain HTML, use the help-text slot instead.",type:"text"}},rows:{title:{value:"Rows",type:"text"},description:{value:"Use the rows attribute to change the number of text rows that get shown.",type:"text"}},placeholder:{title:{value:"Placeholders",type:"text"},description:{value:"Use the placeholder attribute to add a placeholder.",type:"text"}},readonly:{title:{value:"Read-only Textareas",type:"text"},description:{value:"Add the read-only attribute to draw a read-only textarea.",type:"text"}},disabled:{title:{value:"Disabled",type:"text"},description:{value:"Use the disabled attribute to disable a textarea.",type:"text"}},size:{title:{value:"Sizes",type:"text"},description:{value:"Use the size attribute to change a textarea’s size.",type:"text"}},resize:{title:{value:"Prevent Resizing",type:"text"},description:{value:"By default, textareas can be resized vertically by the user. To prevent resizing, set the resize attribute to none.",type:"text"}},"resize-auto":{title:{value:"Expand with Content",type:"text"},description:{value:"Textareas will automatically resize to expand to fit their content when resize is set to auto.",type:"text"}},focus:{title:{value:"Focus / Active",type:"text"},description:{value:"The focus event gives the user feedback that the Textarea has been focused by the keyboard interaction and that the Textarea component is ready for use.",type:"text"}},invalid:{title:{value:"Invalid",type:"text"},description:{value:"The invalid status is used to warn the user that the input is invalid. For example, if the entry of text is mandatory and nothing has been entered or if a text has been entered that does not have the correct format.",type:"text"}}},tooltip:{description:{value:"Tooltips display additional information based on a specific action.",type:"text"},title:{value:"Tooltip",type:"text"}},"tree-item":{description:{value:"A tree item serves as a hierarchical node that lives inside a tree.",type:"text"},title:{value:"Tree Item",type:"text"}},tree:{description:{value:"Trees allow you to display a hierarchical list of selectable tree items. Items with children can be expanded and collapsed as desired by the user.",type:"text"},title:{value:"Tree",type:"text"}},"visually-hidden":{description:{value:"The visually hidden utility makes content accessible to assistive devices without displaying it on the screen.",type:"text"},title:{value:"Visually Hidden",type:"text"}},radio:{default:{description:{value:"Radios allow the user to select a single option from a group. \\nRadios are designed to be used with radio groups.",type:"text"},title:{value:"Radio",type:"text"}},focus:{title:{value:"Focus",type:"text"},description:{value:"The focus event gives the user feedback that the Radio has been focused by the keyboard interaction.",type:"text"}},disabled:{title:{value:"Disabled",type:"text"},description:{value:"Use the disabled attribute to disable a radio.",type:"text"}},sizes:{title:{value:"Sizes",type:"text"},description:{value:"Add the size attribute to the Radio Group to change the radios’ size.",type:"text"}},invalid:{title:{value:"Invalid",type:"text"},description:{value:"The invalid status is used to warn the user that the Radio is invalid. For example, if the radio is mandatory and nothing has been checked.",type:"text"}},initialValue:{title:{value:"Initial Value",type:"text"},description:{value:"To set the initial value and checked state, use the value attribute on the containing radio group.",type:"text"}}},optiongroup:{default:{title:{value:"Option Group",type:"text"},description:{value:"Use <syn-optgroup> to group listbox items visually.",type:"text"}},disabled:{title:{value:"Disabled",type:"text"},description:{value:"Use the disabled attribute in the <syn-optgroup> to disable the Section and prevent it from being selected.",type:"text"}},"prefix-suffix":{title:{value:"Prefix and suffix",type:"text"},description:{value:"Add icons to the start and end of menu items using the prefix and suffix slots.",type:"text"}}},templates:{default:{title:{value:"Forms",type:"text"},description:{value:`Forms usually contain form components such as checkboxes, selects, input fields, radio buttons, toggle switches and more. 
Clear and simple forms help prevent user confusion and incorrect data submission. 

Forms should be designed in columns as this improves scanability. One-column layout is preferred, but use two or more column layouts when there are too many components to fit in an area of the page.

Forms can be simple or complex, and may be presented as dedicated pages, side panels, or dialogs depending on the use case and the situation.`,type:"text"}},templates:{title:{value:"Templates",type:"text"},description:{value:"Contact Form",type:"text"}}},"nav-item":{default:{title:{value:"Navigation Item",type:"text"},description:{value:"The navigation item is used to trigger page switches.",type:"text"}},labels:{title:{value:"Labels",type:"text"},description:{value:"Use the label attribute to change the content of a navigtion item.",type:"text"}},current:{title:{value:"Current",type:"text"},description:{value:"Use the prefix and suffix slots to add. If available the prefix slot will be shown in the rail navigation.",type:"text"}},focus:{title:{value:"Focus",type:"text"},description:{value:"Use the prefix and suffix slots to add. If available the prefix slot will be shown in the rail navigation.",type:"text"}},"nav-horizontal":{title:{value:"Horizontal Navigation",type:"text"},description:{value:"Use the horizontal attribute to indicate that an element is used in a horizontal navigation. (The example shows it in combination with the current attribute, to indicate the difference.)",type:"text"}},"prefix-suffix":{title:{value:"Prefix and suffix Slot",type:"text"},description:{value:"Use the prefix and suffix slots to add e. g. icons or tags. If available the prefix slot will be shown in the rail navigation.",type:"text"}},children:{title:{value:"Children closed / open (vertical only)",type:"text"},description:{value:"Use the *children attribute to indicate that show a chevron. In development this will be handled automatically as soon as an element has children.:",type:"text"}},divider:{title:{value:"Divider",type:"text"},description:{value:"Use the divider attribute to add a border at the top. This should be used for first level elements in vertical navigations.",type:"text"}},indentation:{title:{value:"Indentation",type:"text"},description:{value:"Vertical navigation elements can be indented to indicate deeper navigation levels.",type:"text"}},disabled:{title:{value:"Disabled",type:"text"},description:{value:"Use the disabled attribute to disable a navigation-item.",type:"text"}}},header:{default:{title:{value:"Header",type:"text"},description:{value:"The header is used to indicate the name of the app, provide important actions in a toolbar and a navigation.",type:"text"}},label:{title:{value:"Label",type:"text"},description:{value:"Use the label attribute to change the app name.",type:"text"}},logo:{title:{value:"Logo",type:"text"},description:{value:"Use the logo slot to change the app logo. Usually this is only needed in whitelabel solutions, when the SICK branding explicitly has to be hidden.",type:"text"}},focus:{title:{value:"Focus",type:"text"},description:{value:"The focus event gives the user feedback that a link in the logo has been focused by the keyboard interaction and that the link is ready to be navigated to.",type:"text"}},options:{title:{value:"Meta Navigation",type:"text"},description:{value:`Use the Meta Navigation slot to add additional functionalities to your application. Please be aware of the guidelines regarding the order of icons in the toolbar.
Important: The Options Menu doesn’t handle any responsive behaviour, e. g. if there is not enough space for all items in different screen sizes. You have to make sure yourself, that your app works correctly and e. g. move elements into the footer of the side navigation or inside a “more” button in the Options Menu.`,type:"text"}},navigation:{title:{value:"Top Navigation",type:"text"},description:{value:"Use the top navigation slot to add syn-navigation and horizontal syn-navigation-items.",type:"text"}}}},x={"sick-logo":{description:{value:"The logo represents the company and forms the core of the brand identity. Therefore, the logo has a very special meaning in communication: It is always in a prominent position and retains its absolute independence in all applications. The logo is always used as original graphic. It may not be changed or translated.",type:"text"},title:{value:"SICK Logo",type:"text"}},"material-icons":{description:{value:`Icons are small standard symbols that are primarily used in screen design. Due to their intended use, the icons must be recognizable min size of 16 x 16 pixels.

If you need to create a new icon, you have to follow the Material Icons Guide. Please also inform the Synergy design system team, so we can include this icon to prevent duplicates.`,type:"text"},title:{value:"Material Icons",type:"text"}},"system-icons":{description:{value:`The system-icons contain only a small subset of icons that are used internally by Synergy components.
Each icon wraps the original icon in an own component.
The names are aligned with dev and could deviate from Material Icons.`,type:"text"},title:{value:"System Icons",type:"text"}}},b={"border-radius":{description:{value:`Border radius tokens are used to give sharp edges a more subtle, rounded effect. In general, rounding in SICK user interfaces should be avoided and only used in carefully considered cases. The following points provide some guidance for when and how rounding may be appropriate.

Purpose and usage:

The use of rounding in UI design should primarily serve a functional purpose, enhancing user experience and visual hierarchy.
Rounding should be applied judiciously, considering both aesthetic appeal and usability.
Rounding should only be applied to selected components where it enhances clarity, visual distinction, or interaction affordance.
Avoid excessive rounding, which can compromise clarity and readability.
Rounding Tokens:

4px: Suitable for compact elements typically nested within another element (e.g. tags within select component).
8px: Ideal for container elements like cards, aiding in visually distinguishing multiple containers from one another.
Full roundings: Reserved for status elements like badges, offering a distinct visual cue to draw attention.

For any questions or uncertainties, feel free to reach out to the team for clarification and support.`,type:"text"},title:{value:"Border radius",type:"text"}},"border-width":{description:{value:"The border is primarily used to outline the frame of a component or to structure content. The border color varies depending on the component and context, but the width stays constant.",type:"text"},title:{value:"Border width",type:"text"}},color:{description:{value:"Color tokens help maintain consistent use of color throughout our products.",type:"text"},title:{value:"Color Tokens",type:"text"},light:{description:{value:"Our light theme is the default theme for all applications",type:"text"},title:{value:"Colors / light",type:"text"}},dark:{description:{value:"Use the dark theme as a low-light UI that displays mostly dark surfaces.",type:"text"},title:{value:"Colors / dark",type:"text"}},semantic:{description:{value:"Semantic color information for general or specific components.",type:"text"},title:{value:"Semantic colors",type:"text"},text:{description:{value:"Primary color used for text within the application",type:"text"},title:{value:"Text colors",type:"text"}}}},shadow:{description:{value:"Shadow and elevation tokens are used to give elements the appearance of being raised off the page.",type:"text"},title:{value:"Shadow and elevation",type:"text"}},spacing:{description:{value:"Spacing tokens are used to provide consistent spacing between content in your app.",type:"text"},title:{value:"Spacing",type:"text"}},transition:{description:{value:"Transition tokens are used to provide consistent transitions throughout our applications.",type:"text"},title:{value:"Transition Tokens",type:"text"}},typography:{description:{value:"Typography tokens are used to define typographic style of headings, body text, and UI components. They are used to maintain a consistent set of font styles throughout your app.",type:"text"},title:{value:"Typography",type:"text"},"text-styles":{description:{value:`The Synergy text styles are made up of two categories to cover the range of different needs in designs: Headings and Body / UI text.

Unless explicitly mentioned otherwise in a component, Synergy recommends using sentence case capitalization throughout your applications.`,type:"text"},title:{value:"Text styles",type:"text"},headings:{description:{value:`Heading styles come in a range of sizes, and can be used in a range of contexts, such as:
building page hierarchy,
helping users scan large chunks of text,
providing a title to a page or piece of content,
as subheadings or eyebrow headings, where there is still only one H1 tag per page (as per Accessibility requirements).

Our heading styles are consistently bold, to better address the visual hierarchy.`,type:"text"},title:{value:"Headings",type:"text"}},body:{description:{value:`Body text is used for long-form content where a paragraph or multiple lines of text are required. Body text styles are optimized for reading as a large chunk of information through line height and paragraph spacing. Inline links sit within body text styles and inherit the same font values. 
UI text is text used in UI components and uses the same text stylings.

The default font size is medium (16 px). Synergy supports three additional font sizes for body copy.
It is also possible to format the text bold for certain text passages.`,type:"text"},title:{value:"Body and UI text",type:"text"}}},"font-family":{description:{value:"Synergy uses the open source typeface Open Sans for all elements, but system fonts can also be used.",type:"text"},title:{value:"Font family",type:"text"}}},"z-index":{description:{value:"Z-indexes are used to stack components in a logical manner.",type:"text"},title:{value:"Z-Index Tokens",type:"text"}}},g={angular:{description:{value:"Tips for using Essential in your Angular app.",type:"text"},title:{value:"Angular",type:"text"}},react:{description:{value:"Tips for using Essential in your React app.",type:"text"},title:{value:"React",type:"text"}},"vue-2":{description:{value:"Tips for using Essential in your Vue 2 app.",type:"text"},title:{value:"Vue (version 2)",type:"text"}},vue:{description:{value:"Tips for using Essential in your Vue 3 app.",type:"text"},title:{value:"Vue",type:"text"}}},m={accessibility:{description:{value:"Essential recognizes the need for all users to have undeterred access to the websites and applications that are created with it.",type:"text"},title:{value:"Accessibility Commitment",type:"text"}},changelog:{description:{value:"Changes to each version of the project are documented here.",type:"text"},title:{value:"Changelog",type:"text"}},community:{description:{value:"Essential has a growing community of designers and developers that are building amazing things with web components.",type:"text"},title:{value:"Community",type:"text"}},contributing:{description:{value:"Essential is an open source project, meaning everyone can use it and contribute to its development.",type:"text"},title:{value:"Contributing",type:"text"}}},f={"integrating-with-laravel":{description:{value:"This page explains how to integrate Essential with a Laravel app.",type:"text"},title:{value:"Integrating with Laravel",type:"text"}},"integrating-with-nextjs":{description:{value:"This page explains how to integrate Essential with a NextJS app.",type:"text"},title:{value:"Integrating with NextJS",type:"text"}},"integrating-with-rails":{description:{value:"This page explains how to integrate Essential with a Rails app.",type:"text"},title:{value:"Integrating with Rails",type:"text"}}},z={components:v,assets:x,tokens:b,frameworks:g,"getting-started":{customizing:{description:{value:"Learn how to customize Essential through parts and custom properties.",type:"text"},title:{value:"Customizing",type:"text"}},"form-controls":{description:{value:"Some things to note about Essential and forms.",type:"text"},title:{value:"Form Controls",type:"text"}},installation:{description:{value:"Choose the installation method that works best for you.",type:"text"},title:{value:"Installation",type:"text"}},localization:{description:{value:"Discover how to localize Essential with minimal effort.",type:"text"},title:{value:"Localization",type:"text"}},themes:{description:{value:"Everything you need to know about theming Essential.",type:"text"},title:{value:"Themes",type:"text"}},usage:{description:{value:"Learn more about using custom elements.",type:"text"},title:{value:"Usage",type:"text"}}},resources:m,tutorials:f};var d=function(){return d=Object.assign||function(e){for(var t,a=1,o=arguments.length;a<o;a++){t=arguments[a];for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s])}return e},d.apply(this,arguments)};function w(i){return i.toLowerCase()}var T=[/([a-z0-9])([A-Z])/g,/([A-Z])([A-Z][a-z])/g],k=/[^A-Z0-9]+/gi;function I(i,e){e===void 0&&(e={});for(var t=e.splitRegexp,a=t===void 0?T:t,o=e.stripRegexp,s=o===void 0?k:o,p=e.transform,h=p===void 0?w:p,u=e.delimiter,y=u===void 0?" ":u,n=c(c(i,a,"$1\0$2"),s,"\0"),l=0,r=n.length;n.charAt(l)==="\0";)l++;for(;n.charAt(r-1)==="\0";)r--;return n.slice(l,r).split("\0").map(h).join(y)}function c(i,e,t){return e instanceof RegExp?i.replace(e,t):e.reduce(function(a,o){return a.replace(o,t)},i)}export{d as _,z as d,I as n};
