{"version":3,"file":"slot-4492e2ee.js","sources":["../../../components/src/internal/slot.ts"],"sourcesContent":["// ---------------------------------------------------------------------\n// ðŸ”’ AUTOGENERATED BY VENDORISM\n// Removing this comment will prevent it from being managed by it.\n// ---------------------------------------------------------------------\n\n/* eslint-disable */\nimport type { ReactiveController, ReactiveControllerHost } from 'lit';\n\n/** A reactive controller that determines when slots exist. */\nexport class HasSlotController implements ReactiveController {\n  host: ReactiveControllerHost & Element;\n  slotNames: string[] = [];\n\n  constructor(host: ReactiveControllerHost & Element, ...slotNames: string[]) {\n    (this.host = host).addController(this);\n    this.slotNames = slotNames;\n  }\n\n  private hasDefaultSlot() {\n    return [...this.host.childNodes].some(node => {\n      if (node.nodeType === node.TEXT_NODE && node.textContent!.trim() !== '') {\n        return true;\n      }\n\n      if (node.nodeType === node.ELEMENT_NODE) {\n        const el = node as HTMLElement;\n        const tagName = el.tagName.toLowerCase();\n\n        // Ignore visually hidden elements since they aren't rendered\n        if (tagName === 'syn-visually-hidden') {\n          return false;\n        }\n\n        // If it doesn't have a slot attribute, it's part of the default slot\n        if (!el.hasAttribute('slot')) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n  }\n\n  private hasNamedSlot(name: string) {\n    return this.host.querySelector(`:scope > [slot=\"${name}\"]`) !== null;\n  }\n\n  test(slotName: string) {\n    return slotName === '[default]' ? this.hasDefaultSlot() : this.hasNamedSlot(slotName);\n  }\n\n  hostConnected() {\n    this.host.shadowRoot!.addEventListener('slotchange', this.handleSlotChange);\n  }\n\n  hostDisconnected() {\n    this.host.shadowRoot!.removeEventListener('slotchange', this.handleSlotChange);\n  }\n\n  private handleSlotChange = (event: Event) => {\n    const slot = event.target as HTMLSlotElement;\n\n    if ((this.slotNames.includes('[default]') && !slot.name) || (slot.name && this.slotNames.includes(slot.name))) {\n      this.host.requestUpdate();\n    }\n  };\n}\n\n/**\n * Given a slot, this function iterates over all of its assigned element and text nodes and returns the concatenated\n * HTML as a string. This is useful because we can't use slot.innerHTML as an alternative.\n */\nexport function getInnerHTML(slot: HTMLSlotElement): string {\n  const nodes = slot.assignedNodes({ flatten: true });\n  let html = '';\n\n  [...nodes].forEach(node => {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      html += (node as HTMLElement).outerHTML;\n    }\n\n    if (node.nodeType === Node.TEXT_NODE) {\n      html += node.textContent;\n    }\n  });\n\n  return html;\n}\n\n/**\n * Given a slot, this function iterates over all of its assigned text nodes and returns the concatenated text as a\n * string. This is useful because we can't use slot.textContent as an alternative.\n */\nexport function getTextContent(slot: HTMLSlotElement | undefined | null): string {\n  if (!slot) {\n    return '';\n  }\n  const nodes = slot.assignedNodes({ flatten: true });\n  let text = '';\n\n  [...nodes].forEach(node => {\n    if (node.nodeType === Node.TEXT_NODE) {\n      text += node.textContent;\n    }\n  });\n\n  return text;\n}\n"],"names":["HasSlotController","host","slotNames","event","slot","node","el","name","slotName"],"mappings":"AASO,MAAMA,CAAgD,CAI3D,YAAYC,KAA2CC,EAAqB,CAF5E,KAAA,UAAsB,GAgDd,KAAA,iBAAoBC,GAAiB,CAC3C,MAAMC,EAAOD,EAAM,QAEd,KAAK,UAAU,SAAS,WAAW,GAAK,CAACC,EAAK,MAAUA,EAAK,MAAQ,KAAK,UAAU,SAASA,EAAK,IAAI,IACzG,KAAK,KAAK,eACZ,GAlDC,KAAK,KAAOH,GAAM,cAAc,IAAI,EACrC,KAAK,UAAYC,CACnB,CAEQ,gBAAiB,CACvB,MAAO,CAAC,GAAG,KAAK,KAAK,UAAU,EAAE,KAAaG,GAAA,CACxC,GAAAA,EAAK,WAAaA,EAAK,WAAaA,EAAK,YAAa,SAAW,GAC5D,MAAA,GAGL,GAAAA,EAAK,WAAaA,EAAK,aAAc,CACvC,MAAMC,EAAKD,EAIX,GAHgBC,EAAG,QAAQ,YAAY,IAGvB,sBACP,MAAA,GAIT,GAAI,CAACA,EAAG,aAAa,MAAM,EAClB,MAAA,EAEX,CAEO,MAAA,EAAA,CACR,CACH,CAEQ,aAAaC,EAAc,CACjC,OAAO,KAAK,KAAK,cAAc,mBAAmBA,CAAI,IAAI,IAAM,IAClE,CAEA,KAAKC,EAAkB,CACrB,OAAOA,IAAa,YAAc,KAAK,eAAmB,EAAA,KAAK,aAAaA,CAAQ,CACtF,CAEA,eAAgB,CACd,KAAK,KAAK,WAAY,iBAAiB,aAAc,KAAK,gBAAgB,CAC5E,CAEA,kBAAmB,CACjB,KAAK,KAAK,WAAY,oBAAoB,aAAc,KAAK,gBAAgB,CAC/E,CASF"}