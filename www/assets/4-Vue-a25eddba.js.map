{"version":3,"file":"4-Vue-a25eddba.js","sources":["../../../vue/README.md?raw","../../stories/packages/components/4-Vue.mdx"],"sourcesContent":["export default \"# @synergy-design-system/vue\\n\\nThis package provides [vue.js](https://vuejs.org/) wrappers for [Synergy Web Components](https://github.com/synergy-design-system/synergy-design-system/tree/main/packages/components).\\n\\nThis package aims to provide an improved developer experience in vue applications:\\n\\n- Provides two way data binding and `v-model`\\n- Autocompletion and Types\\n- Better custom event handling of `synergy` events\\n\\n## Getting started\\n\\n### 1. Package installation\\n\\nRun the following steps to install the required packages.\\n\\n```bash\\n# Install the base library and required css files\\nnpm install --save @synergy-design-system/vue @synergy-design-system/tokens\\n```\\n\\n> ⚠️ Note we do **not** ship vue in this package.\\n> You will have to install it by yourself first!\\n\\n### 2. Add the wanted theme to your application\\n\\nThe components will not display correctly without the needed theme. Please include either light or dark theme in your application, for example in a newly installed vue application:\\n\\n```ts\\n// src/main.ts\\n// Add this line to enable the light theme for your application\\nimport '@synergy-design-system/tokens/themes/light.css';\\n\\nimport { createApp } from 'vue'\\nimport App from './App.vue'\\n\\ncreateApp(App).mount('#app')\\n```\\n\\n### 3. Importing and rendering components\\n\\nYou may now use the components by importing them from the `@synergy-design-system/vue` package and rendering them in your own vue components.\\n\\n```html\\n<script setup lang=\\\"ts\\\">\\n// Note the name includes Vue here.\\n// This is done because it would\\n// clash with our native components otherwise\\nimport { SynVueButton } from '@synergy-design-system/vue';\\n</script>\\n\\n<template>\\n  <SynVueButton type=\\\"submit\\\">\\n    Submit me\\n  </SynVueButton>\\n</template>\\n```\\n\\n### 4. Using two way databinding\\n\\nWe support [vue two way data binding](https://vuejs.org/guide/components/v-model.html) for form components out of the box.\\nYou may use it in one of the following ways:\\n\\n```html\\n<script setup lang=\\\"ts\\\">\\nimport { ref } from 'vue';\\nimport {\\n  SynVueButton,\\n  SynVueCheckbox,\\n  SynVueTextarea,\\n  SynVueInput,\\n} from '@synergy-design-system/vue';\\n\\nconst formValues = ref({\\n  checkboxValue: false,\\n  inputValue: '',\\n  textAreaValue: '',\\n});\\n\\nconst submit = (e: Event) => {\\n  e.preventDefault();\\n  e.stopPropagation();\\n  const target = e.target as HTMLFormElement;\\n\\n  const isValid = target.reportValidity();\\n  if (isValid) {\\n    const data = [...new FormData(target)]\\n      .map((v) => {\\n        return `${v[0]}: ${v[1]}`;\\n      })\\n      .join(',\\\\n')\\n      .trim();\\n    // Do something with the data\\n    console.log(data);\\n  }\\n};\\n</script>\\n\\n<template>\\n  <form @submit=\\\"submit\\\">\\n    <SynVueInput\\n      label=\\\"Input Example\\\"\\n      name=\\\"inputValue\\\"\\n      required\\n      v-model=\\\"formValues.inputValue\\\"\\n    />\\n    <SynVueTextarea\\n      v-model=\\\"formValues.textAreaValue\\\"\\n      name=\\\"textAreaValue\\\"\\n    />\\n    <SynVueCheckbox\\n      v-model=\\\"formValues.checkboxValue\\\"\\n      required\\n      name=\\\"checkboxValue\\\"\\n    >Agree</SynVueCheckbox>\\n  </form>\\n</template>\\n```\\n\\n---\\n\\n## Development\\n\\nTo create a new version of this package, proceed in the following way:\\n\\n1. Check out the [Synergy Design System Repository](https://github.com/synergy-design-system/synergy).\\n2. Run `pnpm i -r` to install all dependencies.\\n3. Build the `@synergy-design-system/components` package (or run `pnpm build` in the project root to build everything).\\n4. Move to to `packages/_private/vue-demo` and use `pnpm start` to spin up a local vite project using vue and typescript to validate the build.\\n\\n> ⚠️ The build process will always try to sync this packages `package.json.version` field with the latest version from `@synergy-design-system/components`!\\n> Therefore, it is best to not alter the version string\\n\"","import { Markdown, Meta } from \"@storybook/blocks\";\nimport Readme from \"../../../../vue/README.md?raw\";\n\n<Meta title=\"Packages/Components/Vue (Wrapper)\" />\n\n<Markdown>{Readme}</Markdown>\n"],"names":["Readme","_createMdxContent","props","_jsxs","_Fragment","_jsx","Meta","Markdown","MDXContent","MDXLayout","_provideComponents"],"mappings":"8TAAA,MAAef,SAASC,EAAkBC,EAAO,CAChC,OAAOC,EAAAA,KAAMC,EAAAA,SAAW,CACtB,SAAU,CAACC,EAAI,IAACC,EAAM,CACpB,MAAO,mCACb,CAAK,EAAG;AAAA,EAAMD,EAAI,IAACE,EAAU,CACvB,SAAUP,CAChB,CAAK,CAAC,CACN,CAAG,CACH,CACA,SAASQ,EAAWN,EAAQ,GAAI,CAC9B,KAAM,CAAC,QAASO,CAAS,EAAI,OAAO,OAAO,CAAE,EAAEC,EAAoB,EAAER,EAAM,UAAU,EACrF,OAAOO,EAAYJ,EAAAA,IAAKI,EAAW,OAAO,OAAO,CAAE,EAAEP,EAAO,CAC1D,SAAUG,EAAAA,IAAKJ,EAAmBC,CAAK,CAC3C,CAAG,CAAC,EAAID,EAAuB,CAC/B"}