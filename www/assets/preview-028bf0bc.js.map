{"version":3,"file":"preview-028bf0bc.js","sources":["../../../components/src/components/button-group/button-group.ts","../../../components/src/components/radio-button/radio-button.styles.ts","../../../components/src/components/radio-button/radio-button.component.ts","../../../components/src/components/radio-button/radio-button.ts","../../../../node_modules/.pnpm/chromatic@7.5.0/node_modules/chromatic/isChromatic.mjs","../../src/decorators/StopAnimation.ts","../../.storybook/preview.ts"],"sourcesContent":["// ---------------------------------------------------------------------\n// ðŸ”’ AUTOGENERATED BY VENDORISM\n// Removing this comment will prevent it from being managed by it.\n// ---------------------------------------------------------------------\n\n/* eslint-disable */\nimport SynButtonGroup from './button-group.component.js';\n\nexport * from './button-group.component.js';\nexport default SynButtonGroup;\n\nSynButtonGroup.define('syn-button-group');\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'syn-button-group': SynButtonGroup;\n  }\n}\n","// ---------------------------------------------------------------------\n// ðŸ”’ AUTOGENERATED BY VENDORISM\n// Removing this comment will prevent it from being managed by it.\n// ---------------------------------------------------------------------\n\n/* eslint-disable */\nimport { css } from 'lit';\nimport buttonStyles from '../button/button.styles.js';\n\nexport default css`\n\t/* stylelint-disable */\n  ${buttonStyles}\n\n  .button__prefix,\n  .button__suffix,\n  .button__label {\n    display: inline-flex;\n    position: relative;\n    align-items: center;\n  }\n\n  /* We use a hidden input so constraint validation errors work, since they don't appear to show when used with buttons.\n    We can't actually hide it, though, otherwise the messages will be suppressed by the browser. */\n  .hidden-input {\n    all: unset;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    outline: dotted 1px red;\n    opacity: 0;\n    z-index: -1;\n  }\n`;\n","// ---------------------------------------------------------------------\n// ðŸ”’ AUTOGENERATED BY VENDORISM\n// Removing this comment will prevent it from being managed by it.\n// ---------------------------------------------------------------------\n\n/* eslint-disable */\nimport { classMap } from 'lit/directives/class-map.js';\nimport { HasSlotController } from '../../internal/slot.js';\nimport { html } from 'lit/static-html.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { property, query, state } from 'lit/decorators.js';\nimport { watch } from '../../internal/watch.js';\nimport SynergyElement from '../../internal/synergy-element.js';\nimport styles from './radio-button.styles.js';\nimport type { CSSResultGroup } from 'lit';\n\n/**\n * @summary Radios buttons allow the user to select a single option from a group using a button-like control.\n * @documentation https://synergy.style/components/radio-button\n * @status stable\n * @since 2.0\n *\n * @slot - The radio button's label.\n * @slot prefix - A presentational prefix icon or similar element.\n * @slot suffix - A presentational suffix icon or similar element.\n *\n * @event syn-blur - Emitted when the button loses focus.\n * @event syn-focus - Emitted when the button gains focus.\n *\n * @csspart base - The component's base wrapper.\n * @csspart button - The internal `<button>` element.\n * @csspart button--checked - The internal button element when the radio button is checked.\n * @csspart prefix - The container that wraps the prefix.\n * @csspart label - The container that wraps the radio button's label.\n * @csspart suffix - The container that wraps the suffix.\n */\nexport default class SynRadioButton extends SynergyElement {\n  static styles: CSSResultGroup = styles;\n\n  private readonly hasSlotController = new HasSlotController(this, '[default]', 'prefix', 'suffix');\n\n  @query('.button') input: HTMLInputElement;\n  @query('.hidden-input') hiddenInput: HTMLInputElement;\n\n  @state() protected hasFocus = false;\n\n  /**\n   * @internal The radio button's checked state. This is exposed as an \"internal\" attribute so we can reflect it, making\n   * it easier to style in button groups.\n   */\n  @property({ type: Boolean, reflect: true }) checked = false;\n\n  /** The radio's value. When selected, the radio group will receive this value. */\n  @property() value: string;\n\n  /** Disables the radio button. */\n  @property({ type: Boolean, reflect: true }) disabled = false;\n\n  /**\n   * The radio button's size. When used inside a radio group, the size will be determined by the radio group's size so\n   * this attribute can typically be omitted.\n   */\n  @property({ reflect: true }) size: 'small' | 'medium' | 'large' = 'medium';\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute('role', 'presentation');\n  }\n\n  private handleBlur() {\n    this.hasFocus = false;\n    this.emit('syn-blur');\n  }\n\n  private handleClick(e: MouseEvent) {\n    if (this.disabled) {\n      e.preventDefault();\n      e.stopPropagation();\n      return;\n    }\n\n    this.checked = true;\n  }\n\n  private handleFocus() {\n    this.hasFocus = true;\n    this.emit('syn-focus');\n  }\n\n  @watch('disabled', { waitUntilFirstUpdate: true })\n  handleDisabledChange() {\n    this.setAttribute('aria-disabled', this.disabled ? 'true' : 'false');\n  }\n\n  /** Sets focus on the radio button. */\n  focus(options?: FocusOptions) {\n    this.input.focus(options);\n  }\n\n  /** Removes focus from the radio button. */\n  blur() {\n    this.input.blur();\n  }\n\n  render() {\n    return html`\n      <div part=\"base\" role=\"presentation\">\n        <button\n          part=\"${`button${this.checked ? ' button--checked' : ''}`}\"\n          role=\"radio\"\n          aria-checked=\"${this.checked}\"\n          class=${classMap({\n            button: true,\n            'button--small': this.size === 'small',\n            'button--medium': this.size === 'medium',\n            'button--large': this.size === 'large',\n            'button--checked': this.checked,\n            'button--disabled': this.disabled,\n            'button--focused': this.hasFocus,\n            'button--outline': true,\n            'button--has-label': this.hasSlotController.test('[default]'),\n            'button--has-prefix': this.hasSlotController.test('prefix'),\n            'button--has-suffix': this.hasSlotController.test('suffix')\n          })}\n          aria-disabled=${this.disabled}\n          type=\"button\"\n          value=${ifDefined(this.value)}\n          tabindex=\"${this.checked ? '0' : '-1'}\"\n          @blur=${this.handleBlur}\n          @focus=${this.handleFocus}\n          @click=${this.handleClick}\n        >\n          <slot name=\"prefix\" part=\"prefix\" class=\"button__prefix\"></slot>\n          <slot part=\"label\" class=\"button__label\"></slot>\n          <slot name=\"suffix\" part=\"suffix\" class=\"button__suffix\"></slot>\n        </button>\n      </div>\n    `;\n  }\n}\n","// ---------------------------------------------------------------------\n// ðŸ”’ AUTOGENERATED BY VENDORISM\n// Removing this comment will prevent it from being managed by it.\n// ---------------------------------------------------------------------\n\n/* eslint-disable */\nimport SynRadioButton from './radio-button.component.js';\n\nexport * from './radio-button.component.js';\nexport default SynRadioButton;\n\nSynRadioButton.define('syn-radio-button');\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'syn-radio-button': SynRadioButton;\n  }\n}\n","/* eslint-env browser */\n\nexport default function isChromatic(windowArg) {\n  const windowToCheck = windowArg || (typeof window !== 'undefined' && window);\n  return !!(\n    windowToCheck &&\n    (windowToCheck.navigator.userAgent.match(/Chromatic/) ||\n      windowToCheck.location.href.match(/chromatic=true/))\n  );\n}\n","/* eslint-disable import/no-extraneous-dependencies */\nimport { html } from 'lit';\nimport type { StoryFn } from '@storybook/web-components';\nimport isChromatic from 'chromatic/isChromatic';\n\n/**\n * Wrap stories with custom disable animation helpers\n * @param Story The story to apply this to\n * @param rest Optional parameters\n * @returns TemplateResult\n */\nexport const stopAnimation = (Story: StoryFn, ...rest: unknown[]) => {\n  // Disable animations when running chromatic.\n  // Can be tested by appending a get parameter chromatic=true / false\n  if (isChromatic()) {\n    return html`\n      <style>\n      :root {\n        --syn-transition-x-fast: -1s !important;\n        --syn-transition-fast: -1s !important;\n        --syn-transition-medium: -1s !important;\n        --syn-transition-slow: -1s !important;\n        --syn-transition-x-slow: -1s !important;\n      }\n      syn-spinner,\n      syn-button::part(spinner) {\n        --speed: -1s !important;\n      }\n      </style>\n      ${Story(...rest)}\n    `;\n  }\n\n  // Return the unaltered story\n  return Story(...rest);\n};\n","import type { Preview } from \"@storybook/web-components\";\nimport '@synergy-design-system/tokens/themes/light.css';\nimport '../../components/src/synergy';\n\nimport '../src/docs.css';\nimport '../../tokens/src/shoelace-fallbacks/_utility.css';\n\nimport { stopAnimation } from '../src/decorators/StopAnimation';\n\nconst preview: Preview = {\n  decorators: [stopAnimation],\n  parameters: {\n    docs: {\n      stories: { inline: false }\n    },\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n};\n\nexport default preview;\n"],"names":["SynButtonGroup","styles","css","buttonStyles","SynRadioButton","SynergyElement","HasSlotController","e","options","html","classMap","ifDefined","__decorateClass","query","state","property","watch","isChromatic","windowArg","windowToCheck","stopAnimation","Story","rest","preview"],"mappings":"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","x_google_ignoreList":[4]}