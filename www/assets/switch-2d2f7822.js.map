{"version":3,"file":"switch-2d2f7822.js","sources":["../../../components/src/components/switch/switch.custom.styles.ts","../../../components/src/components/switch/switch.styles.ts","../../../components/src/components/switch/switch.component.ts","../../../components/src/components/switch/switch.ts"],"sourcesContent":["import { css } from 'lit';\n\nexport default css`\n:host([size='small']) {\n    --height: calc(var(--syn-font-size-medium) + 2px);\n    --thumb-size: var(--syn-font-size-small);\n    --width: calc((var(--height) * 2) - 6px);\n  }\n\n  :host([size='medium']) {\n    --height: var(--syn-font-size-large);\n    --thumb-size: var(--syn-font-size-medium);\n    --width: calc((var(--height) * 2) - 6px);\n  }\n\n  :host([size='large']) {\n    --height: calc(var(--syn-toggle-size-large) + 4px);\n    --thumb-size: var(--syn-toggle-size-large);\n    --width: calc((var(--height) * 2) - 6px);\n  }\n\n  .switch.switch--small {\n    padding: var(--syn-spacing-2x-small) 0;\n  }\n\n  .switch.switch--medium {\n    padding: var(--syn-spacing-2x-small) 0;\n  }\n\n  .switch.switch--large {\n    padding: var(--syn-spacing-3x-small) 0;\n  }\n\n  .switch__control {\n    background-color: var(--syn-color-neutral-600);\n    border: solid var(--syn-border-width-medium) var(--syn-color-neutral-600);\n  }\n\n   .switch__control .switch__thumb {\n    border: none;\n   }\n\n  /* Hover */\n  .switch:not(.switch--checked):not(.switch--disabled) .switch__control:hover {\n    background-color: var(--syn-color-neutral-900);\n    border-color: var(--syn-color-neutral-900);\n  }\n\n  .switch:not(.switch--checked):not(.switch--disabled) .switch__control:hover .switch__thumb {\n    background-color: var(--syn-color-neutral-0);\n  }\n\n  /* Checked + hover */\n  .switch.switch--checked:not(.switch--disabled) .switch__control:hover {\n    background-color: var(--syn-color-primary-900);\n    border-color: var(--syn-color-primary-900);\n  }\n\n  .switch.switch--checked:not(.switch--disabled) .switch__control:hover .switch__thumb {\n    background-color: var(--syn-color-neutral-0);\n  }\n\n  /* Focus */\n  .switch:not(.switch--checked):not(.switch--disabled) .switch__input:focus-visible ~ .switch__control {\n    background-color: var(--syn-color-neutral-600);\n    border-color: var(--syn-color-neutral-600);\n    outline: var(--syn-focus-ring);\n    outline-offset: var(--syn-focus-ring-offset);\n  }\n\n  .switch:not(.switch--checked):not(.switch--disabled) .switch__input:focus-visible ~ .switch__control .switch__thumb {\n    background-color: var(--syn-color-neutral-0);\n    outline: none;\n  }\n\n  /* Checked + focus */\n  .switch.switch--checked:not(.switch--disabled) .switch__input:focus-visible ~ .switch__control {\n    background-color: var(--syn-color-primary-900);\n    border-color: var(--syn-color-primary-900);\n    outline: var(--syn-focus-ring);\n    outline-offset: var(--syn-focus-ring-offset);\n  }\n\n  .switch.switch--checked:not(.switch--disabled) .switch__input:focus-visible ~ .switch__control .switch__thumb {\n    background-color: var(--syn-color-neutral-0);\n    outline: none;\n  }\n\n  .switch__label {\n    margin-inline-start: var(--syn-spacing-x-small);\n  }\n  \n  :host([data-user-invalid]) .switch:not(.switch--checked):not(.switch--disabled) .switch__control {\n    background-color: var(--syn-color-error-700);\n    border-color: var(--syn-color-error-700);\n  }\n\n  :host([data-user-invalid]) .switch:not(.switch--checked):not(.switch--disabled) .switch__control:hover {\n    background-color: var(--syn-color-error-900);\n    border-color: var(--syn-color-error-900);\n  }\n  `;\n","// ---------------------------------------------------------------------\n// ðŸ”’ AUTOGENERATED BY VENDORISM\n// Removing this comment will prevent it from being managed by it.\n// ---------------------------------------------------------------------\n\n/* eslint-disable */\nimport { css } from 'lit';\nimport customStyles from './switch.custom.styles.js';\nimport componentStyles from '../../styles/component.styles.js';\n\nexport default css`\n\t/* stylelint-disable */\n  ${componentStyles}\n\n  :host {\n    display: inline-block;\n  }\n\n  :host([size='small']) {\n    --height: var(--syn-toggle-size-small);\n    --thumb-size: calc(var(--syn-toggle-size-small) + 4px);\n    --width: calc(var(--height) * 2);\n\n    font-size: var(--syn-input-font-size-small);\n  }\n\n  :host([size='medium']) {\n    --height: var(--syn-toggle-size-medium);\n    --thumb-size: calc(var(--syn-toggle-size-medium) + 4px);\n    --width: calc(var(--height) * 2);\n\n    font-size: var(--syn-input-font-size-medium);\n  }\n\n  :host([size='large']) {\n    --height: var(--syn-toggle-size-large);\n    --thumb-size: calc(var(--syn-toggle-size-large) + 4px);\n    --width: calc(var(--height) * 2);\n\n    font-size: var(--syn-input-font-size-large);\n  }\n\n  .switch {\n    position: relative;\n    display: inline-flex;\n    align-items: center;\n    font-family: var(--syn-input-font-family);\n    font-size: inherit;\n    font-weight: var(--syn-input-font-weight);\n    color: var(--syn-input-label-color);\n    vertical-align: middle;\n    cursor: pointer;\n  }\n\n  .switch__control {\n    flex: 0 0 auto;\n    position: relative;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    width: var(--width);\n    height: var(--height);\n    background-color: var(--syn-color-neutral-400);\n    border: solid var(--syn-input-border-width) var(--syn-color-neutral-400);\n    border-radius: var(--height);\n    transition:\n      var(--syn-transition-fast) border-color,\n      var(--syn-transition-fast) background-color;\n  }\n\n  .switch__control .switch__thumb {\n    width: var(--thumb-size);\n    height: var(--thumb-size);\n    background-color: var(--syn-color-neutral-0);\n    border-radius: 50%;\n    border: solid var(--syn-input-border-width) var(--syn-color-neutral-400);\n    translate: calc((var(--width) - var(--height)) / -2);\n    transition:\n      var(--syn-transition-fast) translate ease,\n      var(--syn-transition-fast) background-color,\n      var(--syn-transition-fast) border-color,\n      var(--syn-transition-fast) box-shadow;\n  }\n\n  .switch__input {\n    position: absolute;\n    opacity: 0;\n    padding: 0;\n    margin: 0;\n    pointer-events: none;\n  }\n\n  /* Hover */\n  .switch:not(.switch--checked):not(.switch--disabled) .switch__control:hover {\n    background-color: var(--syn-color-neutral-400);\n    border-color: var(--syn-color-neutral-400);\n  }\n\n  .switch:not(.switch--checked):not(.switch--disabled) .switch__control:hover .switch__thumb {\n    background-color: var(--syn-color-neutral-0);\n    border-color: var(--syn-color-neutral-400);\n  }\n\n  /* Focus */\n  .switch:not(.switch--checked):not(.switch--disabled) .switch__input:focus-visible ~ .switch__control {\n    background-color: var(--syn-color-neutral-400);\n    border-color: var(--syn-color-neutral-400);\n  }\n\n  .switch:not(.switch--checked):not(.switch--disabled) .switch__input:focus-visible ~ .switch__control .switch__thumb {\n    background-color: var(--syn-color-neutral-0);\n    border-color: var(--syn-color-primary-600);\n    outline: var(--syn-focus-ring);\n    outline-offset: var(--syn-focus-ring-offset);\n  }\n\n  /* Checked */\n  .switch--checked .switch__control {\n    background-color: var(--syn-color-primary-600);\n    border-color: var(--syn-color-primary-600);\n  }\n\n  .switch--checked .switch__control .switch__thumb {\n    background-color: var(--syn-color-neutral-0);\n    border-color: var(--syn-color-primary-600);\n    translate: calc((var(--width) - var(--height)) / 2);\n  }\n\n  /* Checked + hover */\n  .switch.switch--checked:not(.switch--disabled) .switch__control:hover {\n    background-color: var(--syn-color-primary-600);\n    border-color: var(--syn-color-primary-600);\n  }\n\n  .switch.switch--checked:not(.switch--disabled) .switch__control:hover .switch__thumb {\n    background-color: var(--syn-color-neutral-0);\n    border-color: var(--syn-color-primary-600);\n  }\n\n  /* Checked + focus */\n  .switch.switch--checked:not(.switch--disabled) .switch__input:focus-visible ~ .switch__control {\n    background-color: var(--syn-color-primary-600);\n    border-color: var(--syn-color-primary-600);\n  }\n\n  .switch.switch--checked:not(.switch--disabled) .switch__input:focus-visible ~ .switch__control .switch__thumb {\n    background-color: var(--syn-color-neutral-0);\n    border-color: var(--syn-color-primary-600);\n    outline: var(--syn-focus-ring);\n    outline-offset: var(--syn-focus-ring-offset);\n  }\n\n  /* Disabled */\n  .switch--disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  .switch__label {\n    display: inline-block;\n    line-height: var(--height);\n    margin-inline-start: 0.5em;\n    user-select: none;\n    -webkit-user-select: none;\n  }\n\n  :host([required]) .switch__label::after {\n    content: var(--syn-input-required-content);\n    margin-inline-start: var(--syn-input-required-content-offset);\n  }\n\n  @media (forced-colors: active) {\n    .switch.switch--checked:not(.switch--disabled) .switch__control:hover .switch__thumb,\n    .switch--checked .switch__control .switch__thumb {\n      background-color: ButtonText;\n    }\n  }\n\n  ${customStyles}\n`;\n\n","// ---------------------------------------------------------------------\n// ðŸ”’ AUTOGENERATED BY VENDORISM\n// Removing this comment will prevent it from being managed by it.\n// ---------------------------------------------------------------------\n\n/* eslint-disable */\nimport { classMap } from 'lit/directives/class-map.js';\nimport { defaultValue } from '../../internal/default-value.js';\nimport { FormControlController } from '../../internal/form.js';\nimport { html } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { live } from 'lit/directives/live.js';\nimport { property, query, state } from 'lit/decorators.js';\nimport { watch } from '../../internal/watch.js';\nimport SynergyElement from '../../internal/synergy-element.js';\nimport styles from './switch.styles.js';\nimport type { CSSResultGroup } from 'lit';\nimport type { SynergyFormControl } from '../../internal/synergy-element.js';\n\n/**\n * @summary Switches allow the user to toggle an option on or off.\n * @documentation https://synergy.style/components/switch\n * @status stable\n * @since 2.0\n *\n * @slot - The switch's label.\n *\n * @event syn-blur - Emitted when the control loses focus.\n * @event syn-change - Emitted when the control's checked state changes.\n * @event syn-input - Emitted when the control receives input.\n * @event syn-focus - Emitted when the control gains focus.\n * @event syn-invalid - Emitted when the form control has been checked for validity and its constraints aren't satisfied.\n *\n * @csspart base - The component's base wrapper.\n * @csspart control - The control that houses the switch's thumb.\n * @csspart thumb - The switch's thumb.\n * @csspart label - The switch's label.\n *\n * @cssproperty --width - The width of the switch.\n * @cssproperty --height - The height of the switch.\n * @cssproperty --thumb-size - The size of the thumb.\n */\nexport default class SynSwitch extends SynergyElement implements SynergyFormControl {\n  static styles: CSSResultGroup = styles;\n\n  private readonly formControlController = new FormControlController(this, {\n    value: (control: SynSwitch) => (control.checked ? control.value || 'on' : undefined),\n    defaultValue: (control: SynSwitch) => control.defaultChecked,\n    setValue: (control: SynSwitch, checked: boolean) => (control.checked = checked)\n  });\n\n  @query('input[type=\"checkbox\"]') input: HTMLInputElement;\n\n  @state() private hasFocus = false;\n  @property() title = ''; // make reactive to pass through\n\n  /** The name of the switch, submitted as a name/value pair with form data. */\n  @property() name = '';\n\n  /** The current value of the switch, submitted as a name/value pair with form data. */\n  @property() value: string;\n\n  /** The switch's size. */\n  @property({ reflect: true }) size: 'small' | 'medium' | 'large' = 'medium';\n\n  /** Disables the switch. */\n  @property({ type: Boolean, reflect: true }) disabled = false;\n\n  /** Draws the switch in a checked state. */\n  @property({ type: Boolean, reflect: true }) checked = false;\n\n  /** The default value of the form control. Primarily used for resetting the form control. */\n  @defaultValue('checked') defaultChecked = false;\n\n  /**\n   * By default, form controls are associated with the nearest containing `<form>` element. This attribute allows you\n   * to place the form control outside of a form and associate it with the form that has this `id`. The form must be in\n   * the same document or shadow root for this to work.\n   */\n  @property({ reflect: true }) form = '';\n\n  /** Makes the switch a required field. */\n  @property({ type: Boolean, reflect: true }) required = false;\n\n  /** Gets the validity state object */\n  get validity() {\n    return this.input.validity;\n  }\n\n  /** Gets the validation message */\n  get validationMessage() {\n    return this.input.validationMessage;\n  }\n\n  firstUpdated() {\n    this.formControlController.updateValidity();\n  }\n\n  private handleBlur() {\n    this.hasFocus = false;\n    this.emit('syn-blur');\n  }\n\n  private handleInput() {\n    this.emit('syn-input');\n  }\n\n  private handleInvalid(event: Event) {\n    this.formControlController.setValidity(false);\n    this.formControlController.emitInvalidEvent(event);\n  }\n\n  private handleClick() {\n    this.checked = !this.checked;\n    this.emit('syn-change');\n  }\n\n  private handleFocus() {\n    this.hasFocus = true;\n    this.emit('syn-focus');\n  }\n\n  private handleKeyDown(event: KeyboardEvent) {\n    if (event.key === 'ArrowLeft') {\n      event.preventDefault();\n      this.checked = false;\n      this.emit('syn-change');\n      this.emit('syn-input');\n    }\n\n    if (event.key === 'ArrowRight') {\n      event.preventDefault();\n      this.checked = true;\n      this.emit('syn-change');\n      this.emit('syn-input');\n    }\n  }\n\n  @watch('checked', { waitUntilFirstUpdate: true })\n  handleCheckedChange() {\n    this.input.checked = this.checked; // force a sync update\n    this.formControlController.updateValidity();\n  }\n\n  @watch('disabled', { waitUntilFirstUpdate: true })\n  handleDisabledChange() {\n    // Disabled form controls are always valid\n    this.formControlController.setValidity(true);\n  }\n\n  /** Simulates a click on the switch. */\n  click() {\n    this.input.click();\n  }\n\n  /** Sets focus on the switch. */\n  focus(options?: FocusOptions) {\n    this.input.focus(options);\n  }\n\n  /** Removes focus from the switch. */\n  blur() {\n    this.input.blur();\n  }\n\n  /** Checks for validity but does not show a validation message. Returns `true` when valid and `false` when invalid. */\n  checkValidity() {\n    return this.input.checkValidity();\n  }\n\n  /** Gets the associated form, if one exists. */\n  getForm(): HTMLFormElement | null {\n    return this.formControlController.getForm();\n  }\n\n  /** Checks for validity and shows the browser's validation message if the control is invalid. */\n  reportValidity() {\n    return this.input.reportValidity();\n  }\n\n  /** Sets a custom validation message. Pass an empty string to restore validity. */\n  setCustomValidity(message: string) {\n    this.input.setCustomValidity(message);\n    this.formControlController.updateValidity();\n  }\n\n  render() {\n    return html`\n      <label\n        part=\"base\"\n        class=${classMap({\n          switch: true,\n          'switch--checked': this.checked,\n          'switch--disabled': this.disabled,\n          'switch--focused': this.hasFocus,\n          'switch--small': this.size === 'small',\n          'switch--medium': this.size === 'medium',\n          'switch--large': this.size === 'large'\n        })}\n      >\n        <input\n          class=\"switch__input\"\n          type=\"checkbox\"\n          title=${this.title /* An empty title prevents browser validation tooltips from appearing on hover */}\n          name=${this.name}\n          value=${ifDefined(this.value)}\n          .checked=${live(this.checked)}\n          .disabled=${this.disabled}\n          .required=${this.required}\n          role=\"switch\"\n          aria-checked=${this.checked ? 'true' : 'false'}\n          @click=${this.handleClick}\n          @input=${this.handleInput}\n          @invalid=${this.handleInvalid}\n          @blur=${this.handleBlur}\n          @focus=${this.handleFocus}\n          @keydown=${this.handleKeyDown}\n        />\n\n        <span part=\"control\" class=\"switch__control\">\n          <span part=\"thumb\" class=\"switch__thumb\"></span>\n        </span>\n\n        <div part=\"label\" class=\"switch__label\">\n          <slot></slot>\n        </div>\n      </label>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'syn-switch': SynSwitch;\n  }\n}\n","// ---------------------------------------------------------------------\n// ðŸ”’ AUTOGENERATED BY VENDORISM\n// Removing this comment will prevent it from being managed by it.\n// ---------------------------------------------------------------------\n\n/* eslint-disable */\nimport SynSwitch from './switch.component.js';\n\nexport * from './switch.component.js';\nexport default SynSwitch;\n\nSynSwitch.define('syn-switch');\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'syn-switch': SynSwitch;\n  }\n}\n"],"names":["customStyles","css","styles","componentStyles","SynSwitch","SynergyElement","FormControlController","control","checked","event","options","message","html","classMap","ifDefined","live","__decorateClass","query","state","property","defaultValue","watch"],"mappings":"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"}