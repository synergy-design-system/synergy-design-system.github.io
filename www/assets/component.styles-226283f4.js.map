{"version":3,"file":"component.styles-226283f4.js","sources":["../../../../node_modules/.pnpm/@lit+reactive-element@2.0.0/node_modules/@lit/reactive-element/decorators/property.js","../../../../node_modules/.pnpm/@lit+reactive-element@2.0.0/node_modules/@lit/reactive-element/decorators/state.js","../../../components/src/internal/synergy-element.ts","../../../components/src/internal/watch.ts","../../../components/src/styles/component.styles.ts"],"sourcesContent":["import{defaultConverter as t,notEqual as e}from\"../reactive-element.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const o={attribute:!0,type:String,converter:t,reflect:!1,hasChanged:e},r=(t=o,e,r)=>{const{kind:n,metadata:i}=r;let s=globalThis.litPropertyMetadata.get(i);if(void 0===s&&globalThis.litPropertyMetadata.set(i,s=new Map),s.set(r.name,t),\"accessor\"===n){const{name:o}=r;return{set(r){const n=e.get.call(this);e.set.call(this,r),this.requestUpdate(o,n,t)},init(e){return void 0!==e&&this.C(o,void 0,t),e}}}if(\"setter\"===n){const{name:o}=r;return function(r){const n=this[o];e.call(this,r),this.requestUpdate(o,n,t)}}throw Error(\"Unsupported decorator location: \"+n)};function n(t){return(e,o)=>\"object\"==typeof o?r(t,e,o):((t,e,o)=>{const r=e.hasOwnProperty(o);return e.constructor.createProperty(o,r?{...t,wrapped:!0}:t),r?Object.getOwnPropertyDescriptor(e,o):void 0})(t,e,o)}export{n as property,r as standardProperty};\n//# sourceMappingURL=property.js.map\n","import{property as t}from\"./property.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */function r(r){return t({...r,state:!0,attribute:!1})}export{r as state};\n//# sourceMappingURL=state.js.map\n","// ---------------------------------------------------------------------\n// ðŸ”’ AUTOGENERATED BY VENDORISM\n// Removing this comment will prevent it from being managed by it.\n// ---------------------------------------------------------------------\n\n/* eslint-disable */\nimport { LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\n\n// Match event type name strings that are registered on GlobalEventHandlersEventMap...\ntype EventTypeRequiresDetail<T> = T extends keyof GlobalEventHandlersEventMap\n  ? // ...where the event detail is an object...\n    GlobalEventHandlersEventMap[T] extends CustomEvent<Record<PropertyKey, unknown>>\n    ? // ...that is non-empty...\n      GlobalEventHandlersEventMap[T] extends CustomEvent<Record<PropertyKey, never>>\n      ? never\n      : // ...and has at least one non-optional property\n      Partial<GlobalEventHandlersEventMap[T]['detail']> extends GlobalEventHandlersEventMap[T]['detail']\n      ? never\n      : T\n    : never\n  : never;\n\n// The inverse of the above (match any type that doesn't match EventTypeRequiresDetail)\ntype EventTypeDoesNotRequireDetail<T> = T extends keyof GlobalEventHandlersEventMap\n  ? GlobalEventHandlersEventMap[T] extends CustomEvent<Record<PropertyKey, unknown>>\n    ? GlobalEventHandlersEventMap[T] extends CustomEvent<Record<PropertyKey, never>>\n      ? T\n      : Partial<GlobalEventHandlersEventMap[T]['detail']> extends GlobalEventHandlersEventMap[T]['detail']\n      ? T\n      : never\n    : T\n  : T;\n\n// `keyof EventTypesWithRequiredDetail` lists all registered event types that require detail\ntype EventTypesWithRequiredDetail = {\n  [EventType in keyof GlobalEventHandlersEventMap as EventTypeRequiresDetail<EventType>]: true;\n};\n\n// `keyof EventTypesWithoutRequiredDetail` lists all registered event types that do NOT require detail\ntype EventTypesWithoutRequiredDetail = {\n  [EventType in keyof GlobalEventHandlersEventMap as EventTypeDoesNotRequireDetail<EventType>]: true;\n};\n\n// Helper to make a specific property of an object non-optional\ntype WithRequired<T, K extends keyof T> = T & { [P in K]-?: T[P] };\n\n// Given an event name string, get a valid type for the options to initialize the event that is more restrictive than\n// just CustomEventInit when appropriate (validate the type of the event detail, and require it to be provided if the\n// event requires it)\ntype SynEventInit<T> = T extends keyof GlobalEventHandlersEventMap\n  ? GlobalEventHandlersEventMap[T] extends CustomEvent<Record<PropertyKey, unknown>>\n    ? GlobalEventHandlersEventMap[T] extends CustomEvent<Record<PropertyKey, never>>\n      ? CustomEventInit<GlobalEventHandlersEventMap[T]['detail']>\n      : Partial<GlobalEventHandlersEventMap[T]['detail']> extends GlobalEventHandlersEventMap[T]['detail']\n      ? CustomEventInit<GlobalEventHandlersEventMap[T]['detail']>\n      : WithRequired<CustomEventInit<GlobalEventHandlersEventMap[T]['detail']>, 'detail'>\n    : CustomEventInit\n  : CustomEventInit;\n\n// Given an event name string, get the type of the event\ntype GetCustomEventType<T> = T extends keyof GlobalEventHandlersEventMap\n  ? GlobalEventHandlersEventMap[T] extends CustomEvent<unknown>\n    ? GlobalEventHandlersEventMap[T]\n    : CustomEvent<unknown>\n  : CustomEvent<unknown>;\n\n// `keyof ValidEventTypeMap` is equivalent to `keyof GlobalEventHandlersEventMap` but gives a nicer error message\ntype ValidEventTypeMap = EventTypesWithRequiredDetail | EventTypesWithoutRequiredDetail;\n\nexport default class SynergyElement extends LitElement {\n  // Make localization attributes reactive\n  @property() dir: string;\n  @property() lang: string;\n\n  /** Emits a custom event with more convenient defaults. */\n  emit<T extends string & keyof EventTypesWithoutRequiredDetail>(\n    name: EventTypeDoesNotRequireDetail<T>,\n    options?: SynEventInit<T> | undefined\n  ): GetCustomEventType<T>;\n  emit<T extends string & keyof EventTypesWithRequiredDetail>(\n    name: EventTypeRequiresDetail<T>,\n    options: SynEventInit<T>\n  ): GetCustomEventType<T>;\n  emit<T extends string & keyof ValidEventTypeMap>(\n    name: T,\n    options?: SynEventInit<T> | undefined\n  ): GetCustomEventType<T> {\n    const event = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: false,\n      composed: true,\n      detail: {},\n      ...options\n    });\n\n    this.dispatchEvent(event);\n\n    return event as GetCustomEventType<T>;\n  }\n\n  /* eslint-disable */\n  // @ts-expect-error This is auto-injected at build time.\n  static version = __PACKAGE_VERSION__;\n  \n\n  static define(name: string, elementConstructor = this, options: ElementDefinitionOptions = {}) {\n    const currentlyRegisteredConstructor = customElements.get(name) as\n      | CustomElementConstructor\n      | typeof SynergyElement;\n\n    if (!currentlyRegisteredConstructor) {\n      customElements.define(name, class extends elementConstructor {} as unknown as CustomElementConstructor, options);\n      return;\n    }\n\n    let newVersion = ' (unknown version)';\n    let existingVersion = newVersion;\n\n    if ('version' in elementConstructor && elementConstructor.version) {\n      newVersion = ' v' + elementConstructor.version;\n    }\n\n    if ('version' in currentlyRegisteredConstructor && currentlyRegisteredConstructor.version) {\n      existingVersion = ' v' + currentlyRegisteredConstructor.version;\n    }\n\n    // Need to make sure we're not working with null or empty strings before doing version comparisons.\n    if (newVersion && existingVersion && newVersion === existingVersion) {\n      // If versions match, we don't need to warn anyone. Carry on.\n      return;\n    }\n\n    console.warn(\n      `Attempted to register <${name}>${newVersion}, but <${name}>${existingVersion} has already been registered.`\n    );\n  }\n\n  static dependencies: Record<string, typeof SynergyElement> = {};\n\n  constructor() {\n    super();\n    Object.entries((this.constructor as typeof SynergyElement).dependencies).forEach(([name, component]) => {\n      (this.constructor as typeof SynergyElement).define(name, component);\n    });\n  }\n}\n\nexport interface SynergyFormControl extends SynergyElement {\n  // Form attributes\n  name: string;\n  value: unknown;\n  disabled?: boolean;\n  defaultValue?: unknown;\n  defaultChecked?: boolean;\n  form?: string;\n\n  // Constraint validation attributes\n  pattern?: string;\n  min?: number | string | Date;\n  max?: number | string | Date;\n  step?: number | 'any';\n  required?: boolean;\n  minlength?: number;\n  maxlength?: number;\n\n  // Form validation properties\n  readonly validity: ValidityState;\n  readonly validationMessage: string;\n\n  // Form validation methods\n  checkValidity: () => boolean;\n  getForm: () => HTMLFormElement | null;\n  reportValidity: () => boolean;\n  setCustomValidity: (message: string) => void;\n}\n","// ---------------------------------------------------------------------\n// ðŸ”’ AUTOGENERATED BY VENDORISM\n// Removing this comment will prevent it from being managed by it.\n// ---------------------------------------------------------------------\n\n/* eslint-disable */\nimport type { LitElement } from 'lit';\n\ntype UpdateHandler = (prev?: unknown, next?: unknown) => void;\n\ntype NonUndefined<A> = A extends undefined ? never : A;\n\ntype UpdateHandlerFunctionKeys<T extends object> = {\n  [K in keyof T]-?: NonUndefined<T[K]> extends UpdateHandler ? K : never;\n}[keyof T];\n\ninterface WatchOptions {\n  /**\n   * If true, will only start watching after the initial update/render\n   */\n  waitUntilFirstUpdate?: boolean;\n}\n\n/**\n * Runs when observed properties change, e.g. @property or @state, but before the component updates. To wait for an\n * update to complete after a change occurs, use `await this.updateComplete` in the handler. To start watching after the\n * initial update/render, use `{ waitUntilFirstUpdate: true }` or `this.hasUpdated` in the handler.\n *\n * Usage:\n *\n * @watch('propName')\n * handlePropChange(oldValue, newValue) {\n *   ...\n * }\n */\nexport function watch(propertyName: string | string[], options?: WatchOptions) {\n  const resolvedOptions: Required<WatchOptions> = {\n    waitUntilFirstUpdate: false,\n    ...options\n  };\n  return <ElemClass extends LitElement>(proto: ElemClass, decoratedFnName: UpdateHandlerFunctionKeys<ElemClass>) => {\n    // @ts-expect-error - update is a protected property\n    const { update } = proto;\n    const watchedProperties = Array.isArray(propertyName) ? propertyName : [propertyName];\n\n    // @ts-expect-error - update is a protected property\n    proto.update = function (this: ElemClass, changedProps: Map<keyof ElemClass, ElemClass[keyof ElemClass]>) {\n      watchedProperties.forEach(property => {\n        const key = property as keyof ElemClass;\n        if (changedProps.has(key)) {\n          const oldValue = changedProps.get(key);\n          const newValue = this[key];\n\n          if (oldValue !== newValue) {\n            if (!resolvedOptions.waitUntilFirstUpdate || this.hasUpdated) {\n              (this[decoratedFnName] as unknown as UpdateHandler)(oldValue, newValue);\n            }\n          }\n        }\n      });\n\n      update.call(this, changedProps);\n    };\n  };\n}\n","// ---------------------------------------------------------------------\n// ðŸ”’ AUTOGENERATED BY VENDORISM\n// Removing this comment will prevent it from being managed by it.\n// ---------------------------------------------------------------------\n\n/* eslint-disable */\nimport { css } from 'lit';\n\nexport default css`\n\t/* stylelint-disable */\n  :host {\n    box-sizing: border-box;\n  }\n\n  :host *,\n  :host *::before,\n  :host *::after {\n    box-sizing: inherit;\n  }\n\n  [hidden] {\n    display: none !important;\n  }\n`;\n"],"names":["o","t","e","r","i","s","n","SynergyElement","LitElement","name","component","options","event","elementConstructor","currentlyRegisteredConstructor","newVersion","existingVersion","__decorateClass","property","watch","propertyName","resolvedOptions","proto","decoratedFnName","update","watchedProperties","changedProps","key","oldValue","newValue","componentStyles","css"],"mappings":"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","x_google_ignoreList":[0,1]}